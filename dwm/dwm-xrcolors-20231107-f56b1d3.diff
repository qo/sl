From f56b1d366df331350da500cb921f0deaa84aae9b Mon Sep 17 00:00:00 2001
From: x <>
Date: Tue, 7 Nov 2023 17:00:32 +0300
Subject: [PATCH] make colorscheme load from Xresources

---
 config.def.h | 52 +++++++++++++++++++++++++++++++++++++++++++---------
 drw.c        |  2 +-
 drw.h        |  2 +-
 dwm.c        | 45 +++++++++++++++++++++++++++++++++++++++++++++
 4 files changed, 90 insertions(+), 11 deletions(-)

diff --git a/config.def.h b/config.def.h
index 9efa774..16dc1e1 100644
--- a/config.def.h
+++ b/config.def.h
@@ -7,15 +7,29 @@ static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
 static const char *fonts[]          = { "monospace:size=10" };
 static const char dmenufont[]       = "monospace:size=10";
-static const char col_gray1[]       = "#222222";
-static const char col_gray2[]       = "#444444";
-static const char col_gray3[]       = "#bbbbbb";
-static const char col_gray4[]       = "#eeeeee";
-static const char col_cyan[]        = "#005577";
+
+/* colors to be read from Xresources */
+static char color0                  = "#000000";
+static char color1                  = "#000000";
+static char color2                  = "#000000";
+static char color3                  = "#000000";
+static char color4                  = "#000000";
+static char color5                  = "#000000";
+static char color6                  = "#000000";
+static char color7                  = "#000000";
+static char color8                  = "#000000";
+static char color9                  = "#000000";
+static char color10                 = "#000000";
+static char color11                 = "#000000";
+static char color12                 = "#000000";
+static char color13                 = "#000000";
+static char color14                 = "#000000";
+static char color15                 = "#000000";
+
 static const char *colors[][3]      = {
-	/*               fg         bg         border   */
-	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
-	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
+	/*               fg       bg       border   */
+	[SchemeNorm] = { color15, color0,  color15 },
+	[SchemeSel]  = { color0,  color15, color0  },
 };
 
 /* tagging */
@@ -57,9 +71,29 @@ static const Layout layouts[] = {
 
 /* commands */
 static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
-static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
+static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", color0, "-nf", color15, "-sb", color15, "-sf", color0, NULL };
 static const char *termcmd[]  = { "st", NULL };
 
+/* Xresources colors to load at startup */
+ColorPref colors[] = {
+	{ "color0",  &color0  },
+	{ "color1",  &color1  },
+	{ "color2",  &color2  },
+	{ "color3",  &color3  },
+	{ "color4",  &color4  },
+	{ "color5",  &color5  },
+	{ "color6",  &color6  },
+	{ "color7",  &color7  },
+	{ "color8",  &color8  },
+	{ "color9",  &color9  },
+	{ "color10", &color10 },
+	{ "color11", &color11 },
+	{ "color12", &color12 },
+	{ "color13", &color13 },
+	{ "color14", &color14 },
+	{ "color15", &color15 },
+}
+
 static const Key keys[] = {
 	/* modifier                     key        function        argument */
 	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
diff --git a/drw.c b/drw.c
index a58a2b4..f8a82f5 100644
--- a/drw.c
+++ b/drw.c
@@ -195,7 +195,7 @@ drw_clr_create(Drw *drw, Clr *dest, const char *clrname)
 /* Wrapper to create color schemes. The caller has to call free(3) on the
  * returned color scheme when done using it. */
 Clr *
-drw_scm_create(Drw *drw, const char *clrnames[], size_t clrcount)
+drw_scm_create(Drw *drw, char *clrnames[], size_t clrcount)
 {
 	size_t i;
 	Clr *ret;
diff --git a/drw.h b/drw.h
index 6471431..bdbf950 100644
--- a/drw.h
+++ b/drw.h
@@ -40,7 +40,7 @@ void drw_font_getexts(Fnt *font, const char *text, unsigned int len, unsigned in
 
 /* Colorscheme abstraction */
 void drw_clr_create(Drw *drw, Clr *dest, const char *clrname);
-Clr *drw_scm_create(Drw *drw, const char *clrnames[], size_t clrcount);
+Clr *drw_scm_create(Drw *drw, char *clrnames[], size_t clrcount);
 
 /* Cursor abstraction */
 Cur *drw_cur_create(Drw *drw, int shape);
diff --git a/dwm.c b/dwm.c
index f1d86b2..015b8b5 100644
--- a/dwm.c
+++ b/dwm.c
@@ -36,6 +36,7 @@
 #include <X11/Xlib.h>
 #include <X11/Xproto.h>
 #include <X11/Xutil.h>
+#include <X11/Xresource.h>
 #ifdef XINERAMA
 #include <X11/extensions/Xinerama.h>
 #endif /* XINERAMA */
@@ -141,6 +142,11 @@ typedef struct {
 	int monitor;
 } Rule;
 
+typedef struct {
+	char *name;
+	void *dst;
+} ColorPref;
+
 /* function declarations */
 static void applyrules(Client *c);
 static int applysizehints(Client *c, int *x, int *y, int *w, int *h, int interact);
@@ -233,6 +239,8 @@ static int xerror(Display *dpy, XErrorEvent *ee);
 static int xerrordummy(Display *dpy, XErrorEvent *ee);
 static int xerrorstart(Display *dpy, XErrorEvent *ee);
 static void zoom(const Arg *arg);
+static void load_xresources(void);
+static void resource_load(XrmDatabase db, char *name, void *dst);
 
 /* variables */
 static const char broken[] = "broken";
@@ -2140,6 +2148,41 @@ zoom(const Arg *arg)
 	pop(c);
 }
 
+void
+resource_load(XrmDatabase db, char *name, void *dst)
+{
+	char fullname[256];
+	char *type;
+	XrmValue ret;
+
+	snprintf(fullname, sizeof(fullname), "%s.%s", "dwm", name);
+	fullname[sizeof(fullname) - 1] = '\0';
+
+	XrmGetResource(db, fullname, "*", &type, &ret);
+	if (!(ret.addr == NULL || strncmp("String", type, 64)))
+		strcpy(sdst, ret.addr);
+	}
+
+void
+load_xresources(void)
+{
+	Display *display;
+	char *resm;
+	XrmDatabase db;
+	ColorPref *p;
+
+	display = XOpenDisplay(NULL);
+	resm = XResourceManagerString(display);
+	if (!resm)
+		return;
+
+	db = XrmGetStringDatabase(resm);
+	for (p = resources; p < resources + LENGTH(resources); p++)
+		resource_load(db, p->name, p->dst);
+	XCloseDisplay(display);
+}
+
+
 int
 main(int argc, char *argv[])
 {
@@ -2152,6 +2195,8 @@ main(int argc, char *argv[])
 	if (!(dpy = XOpenDisplay(NULL)))
 		die("dwm: cannot open display");
 	checkotherwm();
+	XrmInitialize();
+	load_xresources();
 	setup();
 #ifdef __OpenBSD__
 	if (pledge("stdio rpath proc exec", NULL) == -1)
-- 
2.42.0

